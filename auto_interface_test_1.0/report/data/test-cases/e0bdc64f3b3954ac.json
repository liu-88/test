{
  "uid" : "e0bdc64f3b3954ac",
  "name" : "test_kuquguanli[case4]",
  "fullName" : "testcases.test_wms.Test_wms_test#test_kuquguanli",
  "historyId" : "6f40d52f0f94414c8159066ba5d114af",
  "time" : {
    "start" : 1664813822359,
    "stop" : 1664813822425,
    "duration" : 66
  },
  "description" : "\n        执行库区管理的测试\n        :param login_system:\n        :param case:\n        :return:\n        ",
  "descriptionHtml" : "<pre><code>    执行库区管理的测试\n    :param login_system:\n    :param case:\n    :return:\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False\n +  where False = judge_expect({'errCode': '12004', 'errMessage': '库区名称重复！', 'success': False}, 'success=true', <requests.sessions.Session object at 0x000001EC495F7C70>, <common.do_excel.Case object at 0x000001EC495ADD00>, <Response [200]>)\n +    where 'success=true' = <common.do_excel.Case object at 0x000001EC495ADD00>.case_expected",
  "statusTrace" : "self = <testcases.test_wms.Test_wms_test object at 0x000001EC4961F370>\nlogin_system = <requests.sessions.Session object at 0x000001EC495F7C70>\ncase = <common.do_excel.Case object at 0x000001EC495ADD00>\n\n    @pytest.mark.parametrize(\"case\", wms_case[\"库区管理\"])\n    def test_kuquguanli(self, login_system, case):\n        \"\"\"\n        执行库区管理的测试\n        :param login_system:\n        :param case:\n        :return:\n        \"\"\"\n        logger.info(get_start_sep(f\"正在执行库区管理的测试，用例id为：{case.case_id} 用例标题为：{case.case_title}  \"))\n        if case.case_method.lower() == \"get\":\n            res = login_system.get(case.case_url)\n            logger.info(get_setup_sep(\"正在发送 GET 请求\"))\n            res_json = res.json()\n            assert judge_expect(res_json, case.case_expected, login_system, case, res)\n        elif case.case_method.lower() == \"post\":\n            logger.info(get_setup_sep(\"正在发送POST请求\"))\n            data = json.loads(case.case_data)\n            res = login_system.post(case.case_url, json=data)\n            res_json = res.json()\n            assert judge_expect(res_json, case.case_expected, login_system, case, res)\n        elif case.case_method.lower() == 'delete':\n            logger.info(get_setup_sep(\"正在发送delete请求\"))\n            res = login_system.delete(case.case_url)\n            res_json = res.json()\n>           assert judge_expect(res_json, case.case_expected, login_system, case, res)\nE           AssertionError: assert False\nE            +  where False = judge_expect({'errCode': '12004', 'errMessage': '库区名称重复！', 'success': False}, 'success=true', <requests.sessions.Session object at 0x000001EC495F7C70>, <common.do_excel.Case object at 0x000001EC495ADD00>, <Response [200]>)\nE            +    where 'success=true' = <common.do_excel.Case object at 0x000001EC495ADD00>.case_expected\n\nE:\\python api\\auto_interface_test_1.0\\testcases\\test_wms.py:39: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "login_system",
    "time" : {
      "start" : 1664813821079,
      "stop" : 1664813821861,
      "duration" : 782
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "rename_log",
    "time" : {
      "start" : 1664813821861,
      "stop" : 1664813821862,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "\n        执行库区管理的测试\n        :param login_system:\n        :param case:\n        :return:\n        ",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False\n +  where False = judge_expect({'errCode': '12004', 'errMessage': '库区名称重复！', 'success': False}, 'success=true', <requests.sessions.Session object at 0x000001EC495F7C70>, <common.do_excel.Case object at 0x000001EC495ADD00>, <Response [200]>)\n +    where 'success=true' = <common.do_excel.Case object at 0x000001EC495ADD00>.case_expected",
    "statusTrace" : "self = <testcases.test_wms.Test_wms_test object at 0x000001EC4961F370>\nlogin_system = <requests.sessions.Session object at 0x000001EC495F7C70>\ncase = <common.do_excel.Case object at 0x000001EC495ADD00>\n\n    @pytest.mark.parametrize(\"case\", wms_case[\"库区管理\"])\n    def test_kuquguanli(self, login_system, case):\n        \"\"\"\n        执行库区管理的测试\n        :param login_system:\n        :param case:\n        :return:\n        \"\"\"\n        logger.info(get_start_sep(f\"正在执行库区管理的测试，用例id为：{case.case_id} 用例标题为：{case.case_title}  \"))\n        if case.case_method.lower() == \"get\":\n            res = login_system.get(case.case_url)\n            logger.info(get_setup_sep(\"正在发送 GET 请求\"))\n            res_json = res.json()\n            assert judge_expect(res_json, case.case_expected, login_system, case, res)\n        elif case.case_method.lower() == \"post\":\n            logger.info(get_setup_sep(\"正在发送POST请求\"))\n            data = json.loads(case.case_data)\n            res = login_system.post(case.case_url, json=data)\n            res_json = res.json()\n            assert judge_expect(res_json, case.case_expected, login_system, case, res)\n        elif case.case_method.lower() == 'delete':\n            logger.info(get_setup_sep(\"正在发送delete请求\"))\n            res = login_system.delete(case.case_url)\n            res_json = res.json()\n>           assert judge_expect(res_json, case.case_expected, login_system, case, res)\nE           AssertionError: assert False\nE            +  where False = judge_expect({'errCode': '12004', 'errMessage': '库区名称重复！', 'success': False}, 'success=true', <requests.sessions.Session object at 0x000001EC495F7C70>, <common.do_excel.Case object at 0x000001EC495ADD00>, <Response [200]>)\nE            +    where 'success=true' = <common.do_excel.Case object at 0x000001EC495ADD00>.case_expected\n\nE:\\python api\\auto_interface_test_1.0\\testcases\\test_wms.py:39: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2154775de18d5394",
      "name" : "log",
      "source" : "2154775de18d5394.txt",
      "type" : "text/plain",
      "size" : 1746
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "rename_log::0",
    "time" : {
      "start" : 1664813822673,
      "stop" : 1664813822678,
      "duration" : 5
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "testcases"
  }, {
    "name" : "suite",
    "value" : "test_wms"
  }, {
    "name" : "subSuite",
    "value" : "Test_wms_test"
  }, {
    "name" : "host",
    "value" : "DESKTOP-3HSC7J4"
  }, {
    "name" : "thread",
    "value" : "12552-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcases.test_wms"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case",
    "value" : "<common.do_excel.Case object at 0x000001EC495ADD00>"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "e0bdc64f3b3954ac.json",
  "parameterValues" : [ "<common.do_excel.Case object at 0x000001EC495ADD00>" ]
}